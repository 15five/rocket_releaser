version: 2.1

workflows:
  lint_and_test_pr:
    jobs:
      - lint:
          filters:
            branches:
              ignore:
                - master
      - test-python:
          name: test-python3.6
          version: "3.6"
          requires:
            - lint
      - test-python:
          name: test-python3.7
          version: "3.7"
          requires:
            - lint
      - test-python:
          name: test-python3.8
          version: "3.8"
          requires:
            - lint
  lint_test_deploy:
    jobs:
      - lint:
          filters:
            branches:
              only:
                - master
      - test-python:
          name: test-python3.6
          version: "3.6"
          requires:
            - lint
      - test-python:
          name: test-python3.7
          version: "3.7"
          requires:
            - lint
      - test-python:
          name: test-python3.8
          version: "3.8"
          requires:
            - lint
      # Don't want to deploy every push to master?
      # You can switch to manual approval if desired
      # Uncomment below and get rid of requirement for test-python
      # - hold-deploy:
      #     type: approval
      #     filters:
      #       branches:
      #         only:
      #           - master
      - deploy:
          # requires:
          #   - hold-deploy
          requires:
            - test-python3.6
            - test-python3.7
            - test-python3.8
jobs:
  lint:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v2-dep-cache-3.6-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.pip" }}
      # see https://github.com/pypa/pip/issues/4537 for why we need to install_egg_info
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install_egg_info
            make dev
      - save_cache:
          key: v2-dep-cache-3.6-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.pip" }}
          paths:
            - "venv"
      - run:
          name: lint
          command: |
            . venv/bin/activate
            make lint
  test-python:
    parameters:
      version:
        type: string
        default: latest
    docker:
      - image: circleci/python:<< parameters.version >>
    steps:
      - checkout
      - restore_cache:
          key: v2-dep-cache-<< parameters.version >>-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.pip" }}
      # see https://github.com/pypa/pip/issues/4537 for why we need to install_egg_info
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install_egg_info
            make dev
      - save_cache:
          key: v2-dep-cache-<< parameters.version >>-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.pip" }}
          paths:
            - "venv"
      - run:
          name: run tests
          command: |
            . venv/bin/activate
            mkdir test-results
            coverage run --source=. --omit=venv/* -m pytest --junitxml=test-results/junit.xml
            coverage report -m
            coverage html
      - run:
          name: Compress Artifacts
          command: tar -cvf htmlcov.tar htmlcov
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: htmlcov.tar
  integration:
    docker:
      - image: circleci/python:3.6
    steps:
      - run: echo "It works!"
      - run: echo $RUN_EXTRA_TESTS
  deploy:
    docker:
      - image: circleci/python:3.6
    steps:
      - checkout
      - restore_cache:
          key: v2-dep-cache-3.6-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.pip" }}
      # see https://github.com/pypa/pip/issues/4537 for why we need to install_egg_info
      - run:
          name: install python dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            python setup.py install_egg_info
            make dev
      - save_cache:
          key: v2-dep-cache-3.6-{{ checksum "requirements.txt" }}-{{ checksum "dev-requirements.pip" }}
          paths:
            - "venv"
      - run:
          name: init .pypirc
          command: |
            echo -e "[pypi]" >> ~/.pypirc
            echo -e "username = caleb15" >> ~/.pypirc
            echo -e "password = $PYPI_PASSWORD" >> ~/.pypirc
      - run:
          name: create packages
          command: |
            make package
      - run:
          name: upload to pypi
          command: |
            . venv/bin/activate
            twine upload dist/*
